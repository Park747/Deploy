{"ast":null,"code":"var _jsxFileName = \"/Users/kyeonwoopark/Desktop/React/portfolio/src/container/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport jumbImg from \"../assets/backimg.JPG\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  let [mode, setMode] = useState(\"\");\n  let [quotesCnt, setQuotesCnt] = useState(0);\n  const quotes = [`까칠하지만 속은 깊은`, \"코딩을 잘하고 싶어하는\", \"도전적이고 싶지만 겁이 많은\", \"피아노와 패션을 사랑하는\", `만족스런 삶을 위해 꾸준히 노력하는`];\n  const mobileQuotes = [`까칠하지만 속은 깊은`, \"코딩을 잘하고 싶어하는\", \"도전적이고 싶지만 겁이 많은\", \"피아노와 패션을 사랑하는\", `만족스런 삶을 위해 꾸준히 노력하는`];\n  const isPc = useMediaQuery({\n    query: \"(min-width:768px)\"\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width:767px)\"\n  });\n  useEffect(() => {\n    if (isPc) setMode(\"isPc\");else if (isMobile) setMode(\"isMobile\");\n  }, [isMobile, isPc]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setQuotesCnt(c => (c + 1) % quotes.length);\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [quotes.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(JumbotronContainer, {\n      id: \"Home\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        children: [/*#__PURE__*/_jsxDEV(Contents, {\n          pos: \"leftTop\",\n          mode: mode,\n          children: \"\\uC81C \\uC18C\\uAC1C\\uB97C \\uAC04\\uB2E8\\uD788 \\uD574\\uBCF4\\uC790\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), mode === \"isPc\" ? quotes.map((quote, index) => /*#__PURE__*/_jsxDEV(Quotes, {\n          stat: index === quotesCnt ? \"active\" : \"hide\",\n          mode: mode,\n          children: [\"'\", quote, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)) : mobileQuotes.map((quote, index) => /*#__PURE__*/_jsxDEV(Quotes, {\n          stat: index === quotesCnt ? \"active\" : \"hide\",\n          mode: mode,\n          children: [\"'\", quote, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Contents, {\n          pos: \"rightBot\",\n          mode: mode,\n          children: \"\\uC0AC\\uB78C\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"2cqmBpurXei3cVGVZrjYV36ARbk=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = Home;\nconst JumbotronContainer = styled.div`\n  position: relative;\n  z-index: auto;\n`;\n_c2 = JumbotronContainer;\nconst Image = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n\n  background-attachment: fixed;\n  background-image: url(${jumbImg});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n_c3 = Image;\nconst Contents = styled.h1`\n  font-size: ${props => props.mode === \"isPc\" ? \"48px\" : \"36px\"};\n  color: white;\n  text-align: ${props => props.pos === \"rightBot\" ? \"right\" : \"\"};\n\n  ${props => props.mode === \"isPc\" && props.pos === \"leftTop\" ? css`\n          margin: 205px 0 0 265px;\n        ` : null};\n  ${props => props.mode === \"isPc\" && props.pos === \"rightBot\" ? css`\n          margin: 0 265px 150px 0;\n        ` : null};\n\n  ${props => props.mode === \"isMobile\" && props.pos === \"leftTop\" ? css`\n          margin: 165px 0 0 2rem;\n        ` : null};\n  ${props => props.mode === \"isMobile\" && props.pos === \"rightBot\" ? css`\n          margin: 0 2rem 110px 0;\n        ` : null};\n\n  display: inline-flex;\n  justify-content: ${props => props.pos === \"rightBot\" ? \"end\" : \"\"};\n`;\n_c4 = Contents;\nconst Quotes = styled.h1`\n  font-size: ${props => props.mode === \"isPc\" ? \"40px\" : \"28px\"};\n  white-space: pre-line;\n  text-align: center;\n  color: white;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  margin: 0;\n\n  margin-top: 25px;\n\n  transition: opacity 0.5s ease-out;\n\n  ${props => props.stat === \"active\" ? css`\n          display: inline-block;\n          opacity: 1;\n        ` : css`\n          opacity: 0;\n        `}\n`;\n_c5 = Quotes;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"JumbotronContainer\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Contents\");\n$RefreshReg$(_c5, \"Quotes\");","map":{"version":3,"sources":["/Users/kyeonwoopark/Desktop/React/portfolio/src/container/Home.js"],"names":["React","useState","useEffect","styled","css","jumbImg","useMediaQuery","Home","mode","setMode","quotesCnt","setQuotesCnt","quotes","mobileQuotes","isPc","query","isMobile","interval","setInterval","c","length","clearInterval","map","quote","index","JumbotronContainer","div","Image","Contents","h1","props","pos","Quotes","stat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport jumbImg from \"../assets/backimg.JPG\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction Home() {\n  let [mode, setMode] = useState(\"\");\n  let [quotesCnt, setQuotesCnt] = useState(0);\n  const quotes = [\n    `까칠하지만 속은 깊은`,\n    \"코딩을 잘하고 싶어하는\",\n    \"도전적이고 싶지만 겁이 많은\",\n    \"피아노와 패션을 사랑하는\",\n    `만족스런 삶을 위해 꾸준히 노력하는`,\n  ];\n\n  const mobileQuotes = [\n    `까칠하지만 속은 깊은`,\n    \"코딩을 잘하고 싶어하는\",\n    \"도전적이고 싶지만 겁이 많은\",\n    \"피아노와 패션을 사랑하는\",\n    `만족스런 삶을 위해 꾸준히 노력하는`,\n  ];\n  const isPc = useMediaQuery({\n    query: \"(min-width:768px)\",\n  });\n  const isMobile = useMediaQuery({\n    query: \"(max-width:767px)\",\n  });\n\n  useEffect(() => {\n    if (isPc) setMode(\"isPc\");\n    else if (isMobile) setMode(\"isMobile\");\n  }, [isMobile, isPc]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setQuotesCnt((c) => (c + 1) % quotes.length);\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [quotes.length]);\n\n  return (\n    <>\n      <JumbotronContainer id=\"Home\">\n        <Image>\n          <Contents pos={\"leftTop\"} mode={mode}>\n            제 소개를 간단히 해보자면\n          </Contents>\n          {mode === \"isPc\"\n            ? quotes.map((quote, index) => (\n                <Quotes\n                  stat={index === quotesCnt ? \"active\" : \"hide\"}\n                  mode={mode}\n                >\n                  '{quote}'\n                </Quotes>\n              ))\n            : mobileQuotes.map((quote, index) => (\n                <Quotes\n                  stat={index === quotesCnt ? \"active\" : \"hide\"}\n                  mode={mode}\n                >\n                  '{quote}'\n                </Quotes>\n              ))}\n          <Contents pos={\"rightBot\"} mode={mode}>\n            사람입니다.\n          </Contents>\n        </Image>\n      </JumbotronContainer>\n    </>\n  );\n}\n\nconst JumbotronContainer = styled.div`\n  position: relative;\n  z-index: auto;\n`;\n\nconst Image = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n\n  background-attachment: fixed;\n  background-image: url(${jumbImg});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nconst Contents = styled.h1`\n  font-size: ${(props) => (props.mode === \"isPc\" ? \"48px\" : \"36px\")};\n  color: white;\n  text-align: ${(props) => (props.pos === \"rightBot\" ? \"right\" : \"\")};\n\n  ${(props) =>\n    props.mode === \"isPc\" && props.pos === \"leftTop\"\n      ? css`\n          margin: 205px 0 0 265px;\n        `\n      : null};\n  ${(props) =>\n    props.mode === \"isPc\" && props.pos === \"rightBot\"\n      ? css`\n          margin: 0 265px 150px 0;\n        `\n      : null};\n\n  ${(props) =>\n    props.mode === \"isMobile\" && props.pos === \"leftTop\"\n      ? css`\n          margin: 165px 0 0 2rem;\n        `\n      : null};\n  ${(props) =>\n    props.mode === \"isMobile\" && props.pos === \"rightBot\"\n      ? css`\n          margin: 0 2rem 110px 0;\n        `\n      : null};\n\n  display: inline-flex;\n  justify-content: ${(props) => (props.pos === \"rightBot\" ? \"end\" : \"\")};\n`;\n\nconst Quotes = styled.h1`\n  font-size: ${(props) => (props.mode === \"isPc\" ? \"40px\" : \"28px\")};\n  white-space: pre-line;\n  text-align: center;\n  color: white;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  margin: 0;\n\n  margin-top: 25px;\n\n  transition: opacity 0.5s ease-out;\n\n  ${(props) =>\n    props.stat === \"active\"\n      ? css`\n          display: inline-block;\n          opacity: 1;\n        `\n      : css`\n          opacity: 0;\n        `}\n`;\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}